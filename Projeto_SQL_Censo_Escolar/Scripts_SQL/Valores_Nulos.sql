#VERIFICAR VALORES NULOS

#Identificando todas as quintidades de valore nulos em cada coluna, para verificar qual a melhor forma de tratar esses valores
SELECT 
    COUNT(*) AS total_registros,
    SUM(CASE WHEN id IS NULL OR id='' THEN 1 ELSE 0 END) AS id_nulos,
    SUM(CASE WHEN NO_REGIAO IS NULL OR NO_REGIAO ='' THEN 1 ELSE 0 END) AS NO_REGIAO_nulos,
    SUM(CASE WHEN NO_UF IS NULL OR NO_UF ='' THEN 1 ELSE 0 END) AS NO_UF_nulos,
    SUM(CASE WHEN NO_MUNICIPIO IS NULL OR NO_MUNICIPIO ='' THEN 1 ELSE 0 END) AS NO_MUNICIPIO_nulos,
    SUM(CASE WHEN NO_ENTIDADE IS NULL OR NO_ENTIDADE ='' THEN 1 ELSE 0 END) AS NO_ENTIDADE_nulos,
    SUM(CASE WHEN TP_DEPENDENCIA IS NULL OR TP_DEPENDENCIA ='' THEN 1 ELSE 0 END) AS TP_DEPENDENCIA_nulos,
    SUM(CASE WHEN TP_LOCALIZACAO IS NULL OR TP_LOCALIZACAO ='' THEN 1 ELSE 0 END) AS TP_LOCALIZACAO_nulos,
    SUM(CASE WHEN IN_INTERNET IS NULL OR IN_INTERNET ='' THEN 1 ELSE 0 END) AS IN_INTERNET_nulos,
    SUM(CASE WHEN IN_ENERGIA_REDE_PUBLICA IS NULL OR IN_ENERGIA_REDE_PUBLICA ='' THEN 1 ELSE 0 END) AS IN_ENERGIA_REDE_PUBLICA_nulos,
    SUM(CASE WHEN IN_AGUA_POTAVEL IS NULL OR IN_AGUA_POTAVEL ='' THEN 1 ELSE 0 END) AS IN_AGUA_POTAVEL_nulos,
    SUM(CASE WHEN IN_ESGOTO_REDE_PUBLICA IS NULL OR IN_ESGOTO_REDE_PUBLICA ='' THEN 1 ELSE 0 END) AS IN_ESGOTO_REDE_PUBLICA_nulos,
    SUM(CASE WHEN IN_BANHEIRO IS NULL OR IN_BANHEIRO ='' THEN 1 ELSE 0 END) AS IN_BANHEIRO_nulos,
    SUM(CASE WHEN IN_QUADRA_ESPORTES IS NULL OR IN_QUADRA_ESPORTES = '' THEN 1 ELSE 0 END) AS IN_QUADRA_ESPORTES_nulos,
    SUM(CASE WHEN IN_REFEITORIO IS NULL OR IN_REFEITORIO ='' THEN 1 ELSE 0 END) AS IN_REFEITORIO_nulos,
    SUM(CASE WHEN IN_BIBLIOTECA IS NULL OR IN_BIBLIOTECA ='' THEN 1 ELSE 0 END) AS IN_BIBLIOTECA_nulos,
    SUM(CASE WHEN QT_MAT_BAS IS NULL OR QT_MAT_BAS ='' THEN 1 ELSE 0 END) AS QT_MAT_BAS_nulos,
    SUM(CASE WHEN QT_DOC_BAS IS NULL OR QT_DOC_BAS ='' THEN 1 ELSE 0 END) AS QT_DOC_BAS_nulos,
    SUM(CASE WHEN QT_TUR_BAS IS NULL OR QT_TUR_BAS ='' THEN 1 ELSE 0 END) AS QT_TUR_BAS_nulos
FROM 
    escolas_2024;
    
#Identificamos valores nulos nas variaveis booleanas e nas variaveis numericas(quantitativas)
#Tratando valores nulos

# Para verificar melhor a eficiência das alterações que serão aplicada criaremos um procedure para verificar os valores nulos nas colunas 

DELIMITER $$

CREATE PROCEDURE resumo_dados_nulos()
BEGIN
		SELECT 
			COUNT(*) AS total_registros,
			SUM(CASE WHEN id IS NULL OR id='' THEN 1 ELSE 0 END) AS id_nulos,
			SUM(CASE WHEN NO_REGIAO IS NULL OR NO_REGIAO ='' THEN 1 ELSE 0 END) AS NO_REGIAO_nulos,
			SUM(CASE WHEN NO_UF IS NULL OR NO_UF ='' THEN 1 ELSE 0 END) AS NO_UF_nulos,
			SUM(CASE WHEN NO_MUNICIPIO IS NULL OR NO_MUNICIPIO ='' THEN 1 ELSE 0 END) AS NO_MUNICIPIO_nulos,
			SUM(CASE WHEN NO_ENTIDADE IS NULL OR NO_ENTIDADE ='' THEN 1 ELSE 0 END) AS NO_ENTIDADE_nulos,
			SUM(CASE WHEN TP_DEPENDENCIA IS NULL OR TP_DEPENDENCIA ='' THEN 1 ELSE 0 END) AS TP_DEPENDENCIA_nulos,
			SUM(CASE WHEN TP_LOCALIZACAO IS NULL OR TP_LOCALIZACAO ='' THEN 1 ELSE 0 END) AS TP_LOCALIZACAO_nulos,
			SUM(CASE WHEN IN_INTERNET IS NULL OR TRIM(IN_INTERNET) ='' THEN 1 ELSE 0 END) AS IN_INTERNET_nulos,
			SUM(CASE WHEN IN_ENERGIA_REDE_PUBLICA IS NULL OR TRIM(IN_ENERGIA_REDE_PUBLICA) ='' THEN 1 ELSE 0 END) AS IN_ENERGIA_REDE_PUBLICA_nulos,
			SUM(CASE WHEN IN_AGUA_POTAVEL IS NULL OR TRIM(IN_AGUA_POTAVEL) ='' THEN 1 ELSE 0 END) AS IN_AGUA_POTAVEL_nulos,
			SUM(CASE WHEN IN_ESGOTO_REDE_PUBLICA IS NULL OR TRIM(IN_ESGOTO_REDE_PUBLICA) ='' THEN 1 ELSE 0 END) AS IN_ESGOTO_REDE_PUBLICA_nulos,
			SUM(CASE WHEN IN_BANHEIRO IS NULL OR TRIM(IN_BANHEIRO) ='' THEN 1 ELSE 0 END) AS IN_BANHEIRO_nulos,
			SUM(CASE WHEN IN_QUADRA_ESPORTES IS NULL OR TRIM(IN_QUADRA_ESPORTES) = '' THEN 1 ELSE 0 END) AS IN_QUADRA_ESPORTES_nulos,
			SUM(CASE WHEN IN_REFEITORIO IS NULL OR TRIM(IN_REFEITORIO) ='' THEN 1 ELSE 0 END) AS IN_REFEITORIO_nulos,
			SUM(CASE WHEN IN_BIBLIOTECA IS NULL OR TRIM(IN_BIBLIOTECA) ='' THEN 1 ELSE 0 END) AS IN_BIBLIOTECA_nulos,
			SUM(CASE WHEN QT_MAT_BAS IS NULL OR QT_MAT_BAS ='' THEN 1 ELSE 0 END) AS QT_MAT_BAS_nulos,
			SUM(CASE WHEN QT_DOC_BAS IS NULL OR QT_DOC_BAS ='' THEN 1 ELSE 0 END) AS QT_DOC_BAS_nulos,
			SUM(CASE WHEN QT_TUR_BAS IS NULL OR QT_TUR_BAS ='' THEN 1 ELSE 0 END) AS QT_TUR_BAS_nulos
		FROM 
			escolas_backup;
END $$
DELIMITER ;

#Mudança dos valores nulos para -1 nas variaveis booleans

-- Atualiza a tabela escolas_backup substituindo NULL/vazios por -1
-- em todas as colunas de valores booleanas
UPDATE escolas_backup
SET 
  IN_INTERNET = CASE 
    WHEN IN_INTERNET IS NULL OR TRIM(IN_INTERNET) = '' THEN -1 
    ELSE IN_INTERNET 
  END,
  
  IN_ENERGIA_REDE_PUBLICA = CASE 
    WHEN IN_ENERGIA_REDE_PUBLICA IS NULL OR TRIM(IN_ENERGIA_REDE_PUBLICA) = '' THEN -1 
    ELSE IN_ENERGIA_REDE_PUBLICA 
  END,
  
  IN_AGUA_POTAVEL = CASE 
    WHEN IN_AGUA_POTAVEL IS NULL OR TRIM(IN_AGUA_POTAVEL) = '' THEN -1 
    ELSE IN_AGUA_POTAVEL 
  END,
  
  IN_ESGOTO_REDE_PUBLICA = CASE 
    WHEN IN_ESGOTO_REDE_PUBLICA IS NULL OR TRIM(IN_ESGOTO_REDE_PUBLICA) = '' THEN -1 
    ELSE IN_ESGOTO_REDE_PUBLICA 
  END,
  
  IN_BANHEIRO = CASE 
    WHEN IN_BANHEIRO IS NULL OR TRIM(IN_BANHEIRO) = '' THEN -1 
    ELSE IN_BANHEIRO 
  END,
  
  IN_QUADRA_ESPORTES = CASE 
    WHEN IN_QUADRA_ESPORTES IS NULL OR TRIM(IN_QUADRA_ESPORTES) = '' THEN -1 
    ELSE IN_QUADRA_ESPORTES 
  END,
  
  IN_REFEITORIO = CASE 
    WHEN IN_REFEITORIO IS NULL OR TRIM(IN_REFEITORIO) = '' THEN -1 
    ELSE IN_REFEITORIO 
  END,
  
  IN_BIBLIOTECA = CASE 
    WHEN IN_BIBLIOTECA IS NULL OR TRIM(IN_BIBLIOTECA) = '' THEN -1 
    ELSE IN_BIBLIOTECA 
  END;


-- Chama o procedure para verificar a quantidade de valores nulos restantes
CALL resumo_dados_nulos();

-- Visualiza uma amostra dos dados com as alterações aplicadas
SELECT * FROM escolas_backup LIMIT 10;

#Para as variaveis quantitativas vamos assumir algo parecido que fizemos antes
#Substituir os valores Nulos por "-1" que vai indicar "Sem Informação"

UPDATE escolas_backup
SET 
  QT_MAT_BAS = CASE
    WHEN QT_MAT_BAS IS NULL OR QT_MAT_BAS = '' THEN -1
    ELSE QT_MAT_BAS
  END,

  QT_DOC_BAS = CASE
    WHEN QT_DOC_BAS IS NULL OR QT_DOC_BAS = '' THEN -1
    ELSE QT_DOC_BAS
  END,
  
  QT_TUR_BAS = CASE
    WHEN QT_TUR_BAS IS NULL OR QT_TUR_BAS = '' THEN -1
    ELSE QT_TUR_BAS
  END;
  
  -- Chama o procedure para verificar a quantidade de valores nulos restantes
CALL resumo_dados_nulos();

-- Visualiza uma amostra dos dados com as alterações aplicadas
SELECT * FROM escolas_backup LIMIT 10;
